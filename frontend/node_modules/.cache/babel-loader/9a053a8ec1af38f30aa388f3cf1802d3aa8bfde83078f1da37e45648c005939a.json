{"ast":null,"code":"var _jsxFileName = \"/home/sadiq/Desktop/gstem-website/frontend/src/components/home/upcomingEvents.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { Row, Col } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst response = await axios.get(`localhost:4000/api/events/`);\nuseEffect(() => {\n  const getData = async () => {\n    try {\n      const response = await axios.get(`localhost:4000/api/events/`);\n      setData(response.data);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n      setData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  getData();\n}, []);\nconsole.log(response);\nconst items = [{\n  key: '1',\n  title: 'Announcement 1',\n  content: \"\"\n}, {\n  key: '2',\n  title: 'Announcement 2',\n  content: \"No upcoming events.\"\n}, {\n  key: '3',\n  title: 'Announcement 3',\n  content: \"\"\n}];\nfunction UpcomingEvents() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"about\",\n    className: \"block aboutBlock\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleHolder\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upcoming Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: items.map(item => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              span: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon\",\n                children: item.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = UpcomingEvents;\nexport default UpcomingEvents;\nvar _c;\n$RefreshReg$(_c, \"UpcomingEvents\");","map":{"version":3,"names":["React","useEffect","axios","Row","Col","jsxDEV","_jsxDEV","response","get","getData","setData","data","setError","err","message","setLoading","console","log","items","key","title","content","UpcomingEvents","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","gutter","map","item","md","span","icon","_c","$RefreshReg$"],"sources":["/home/sadiq/Desktop/gstem-website/frontend/src/components/home/upcomingEvents.js"],"sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { Row, Col } from 'antd';\n\nconst response = await axios.get(\n  `localhost:4000/api/events/`\n);\n\n\nuseEffect(() => {\n  const getData = async () => {\n    try {\n      const response = await axios.get(\n        `localhost:4000/api/events/`\n      );\n      setData(response.data);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n      setData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  getData();\n}, []);\n\nconsole.log(response)\n\n\nconst items = [\n  {\n    key: '1',\n    title: 'Announcement 1',\n    content: \"\",\n  },\n  {\n    key: '2',\n    title: 'Announcement 2',\n    content:\"No upcoming events.\",\n  },\n  {\n    key: '3',\n    title: 'Announcement 3',\n    content:\"\",\n  },\n]\n\nfunction UpcomingEvents() {\n  return (\n    <div id=\"about\" className=\"block aboutBlock\">\n      <div className=\"container-fluid\">\n        <div className=\"titleHolder\">\n          <h2>Upcoming Events</h2>\n        </div>\n        <Row gutter={[16, 16]}>   \n          {items.map(item => {\n            return (\n              <Col md={{ span: 8 }} key={item.key}>\n                <div className=\"content\">\n                  <div className=\"icon\">\n                    {item.icon}\n                  </div>\n                  <h2><b>{item.title}</b></h2>\n                  <p>{item.content}</p>\n                </div>\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default UpcomingEvents;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}